{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ProceedBookingModel } from './Models/ProceedBookingModel';\nimport { JourneyInputModel } from './Models/JourneyInputModel';\nimport { SearchFlightModel } from './Models/SearchFlightModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./Service/FlightSearchService\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction FlightSearchComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const trip_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", trip_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", trip_r9, \" \");\n  }\n}\n\nfunction FlightSearchComponent_span_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 32);\n    i0.ɵɵtext(1, \"No Data Available\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction FlightSearchComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelementStart(1, \"div\", 34);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \" Airline \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 35);\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8, \" Flight \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 36);\n    i0.ɵɵelementStart(12, \"span\");\n    i0.ɵɵtext(13, \" From \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 37);\n    i0.ɵɵelementStart(17, \"span\");\n    i0.ɵɵtext(18, \" To \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"br\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 38);\n    i0.ɵɵelementStart(22, \"span\");\n    i0.ɵɵtext(23, \" Departure Date \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"br\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 39);\n    i0.ɵɵelementStart(27, \"span\");\n    i0.ɵɵtext(28, \" Departure Time \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"br\");\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"div\", 40);\n    i0.ɵɵelementStart(32, \"span\");\n    i0.ɵɵtext(33, \" Arrival Date \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"br\");\n    i0.ɵɵtext(35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"div\", 41);\n    i0.ɵɵelementStart(37, \"span\");\n    i0.ɵɵtext(38, \" Arrival Time \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(39, \"br\");\n    i0.ɵɵtext(40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"input\", 42, 43);\n    i0.ɵɵlistener(\"change\", function FlightSearchComponent_div_44_Template_input_change_41_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const flight_r10 = restoredCtx.$implicit;\n\n      const _r11 = i0.ɵɵreference(42);\n\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.change(_r11.value, flight_r10.departureDate);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const flight_r10 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", flight_r10.airline, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", flight_r10.flightName, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", flight_r10.fromLocation, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", flight_r10.toLocation, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", flight_r10.departureDate, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", flight_r10.departureTime, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", flight_r10.arrivalDate, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", flight_r10.arrivalTime, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", flight_r10.journeyId);\n  }\n}\n\nfunction FlightSearchComponent_button_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 44);\n    i0.ɵɵtext(1, \"Proceed\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let FlightSearchComponent = /*#__PURE__*/(() => {\n  class FlightSearchComponent {\n    constructor(activatedRoute, router, flightservice) {\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.flightservice = flightservice;\n      this.tripType = \"\";\n      this.fromLocation = \"\";\n      this.toLocation = \"\";\n      this.startDate = \"\";\n      this.returnDate = \"\";\n      this.journeyId = 0;\n      this.selectedDepartureDate = \"\";\n      this.userId = 0;\n      this.proceedIpModel = new ProceedBookingModel();\n      this.journeyInputModelList = [];\n      this.journeyIpModel = new JourneyInputModel();\n      this.flightList = [];\n      this.bookingHeaderList = [];\n      this.dataAvailable = true;\n      this.trip_Type = ['One Way', 'Two Way'];\n      this.cities = [];\n      console.log(\"Hello\");\n      this.searchForm = new FormGroup({\n        // tripType: new FormControl(\"\", [\n        //   Validators.required\n        // ]),\n        fromLocation: new FormControl(\"\", [Validators.required]),\n        toLocation: new FormControl(\"\", [Validators.required]),\n        startDate: new FormControl(\"\", [Validators.required]),\n        returnDate: new FormControl(\"\", [// Validators.required\n        ])\n      });\n      this.ListFlightsForm = new FormGroup({\n        // tripType: new FormControl(\"\", [\n        //   Validators.required\n        // ]),\n        fromLocation: new FormControl(\"\", [Validators.required]),\n        toLocation: new FormControl(\"\", [Validators.required]),\n        startDate: new FormControl(\"\", [Validators.required]),\n        returnDate: new FormControl(\"\", [// Validators.required\n        ])\n      });\n      this.activatedRoute.params.subscribe(params => {\n        // console.log(\"param changed\");\n        this.userId = params['userId'];\n        console.log(this.userId + \"from flightSearch\");\n      });\n    }\n\n    ngOnInit() {}\n\n    getFlights(trip_Type, fromLocation, toLocation, startDate, returnDate) {\n      console.log(\"search Flights\");\n      this.tripType = trip_Type;\n      this.fromLocation = fromLocation;\n      this.toLocation = toLocation;\n      this.startDate = startDate;\n      this.returnDate = returnDate;\n      this.searchFlightModel = new SearchFlightModel(startDate, returnDate, fromLocation, toLocation, this.tripType === 'One Way' ? true : false);\n      console.log(\"service op before\" + this.flightsOutPut);\n      console.log(JSON.stringify(this.searchFlightModel));\n      this.flightservice.SearchFlight(this.searchFlightModel).subscribe({\n        next: res => {\n          this.flightsOutPut = res; // let temp: FlightModel[] |undefined =;\n\n          console.log(res['1']);\n          this.flightList = res['1'];\n          this.dataAvailable = true;\n\n          if (this.flightList.length == 0) {\n            console.log(\"empty\");\n            this.dataAvailable = false;\n          }\n        }\n      });\n      console.log(\"service op after\" + this.flightsOutPut);\n      console.log(trip_Type + \" \" + fromLocation + \" \" + toLocation + \" \" + startDate + \" \" + returnDate);\n    }\n\n    proceedforBooking() {\n      console.log(this.userId + \"before\");\n      this.proceedIpModel.userId = this.userId; //this.userId;\n\n      console.log(this.userId + \" after\");\n\n      if (this.tripType == \"One Way\") {\n        this.proceedIpModel.oneWaytrip = true;\n      } else {\n        this.proceedIpModel.oneWaytrip = false;\n      }\n\n      this.journeyIpModel.journeyId = this.journeyId;\n      this.journeyIpModel.journeyDate = this.selectedDepartureDate;\n      this.journeyInputModelList[0] = this.journeyIpModel;\n      this.proceedIpModel.journeyInputModel = this.journeyInputModelList;\n      console.log(JSON.stringify(this.proceedIpModel));\n      this.flightservice.proceedWithFlight(JSON.parse(JSON.stringify(this.proceedIpModel).replace(/[_]/g, \"\"))).subscribe({\n        next: res => {\n          console.log(res);\n          this.bookingHeaderList = res;\n          console.log(JSON.stringify(res) + \" resp\");\n          console.log(JSON.stringify(this.bookingHeaderList) + \" resp1\");\n          this.proceedIpModel.pnr = this.bookingHeaderList[0].pnrNumber;\n          console.log(JSON.stringify(this.proceedIpModel));\n          this.router.navigate([\"passenger\", JSON.stringify(this.proceedIpModel)]);\n        }\n      });\n    }\n\n    change(journeyId, departureDate) {\n      this.journeyId = journeyId;\n      this.selectedDepartureDate = departureDate;\n      console.log(journeyId);\n      console.log(departureDate);\n    }\n\n    getCity(city) {\n      this.flightservice.getCity(city).subscribe({\n        next: res => {\n          console.log(\"inside rest call\");\n          this.cities = res;\n        }\n      });\n    }\n\n    getInbox() {\n      this.router.navigate([\"inbox\", this.userId]);\n    }\n\n  }\n\n  FlightSearchComponent.ɵfac = function FlightSearchComponent_Factory(t) {\n    return new (t || FlightSearchComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FlightSearchService));\n  };\n\n  FlightSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FlightSearchComponent,\n    selectors: [[\"app-flight-search\"]],\n    decls: 46,\n    vars: 7,\n    consts: [[1, \"HeaderSearch\"], [\"id\", \"logo\", 1, \"column\"], [\"id\", \"searchFields\", 1, \"column\", 3, \"formGroup\", \"submit\"], [1, \"trip_Type\"], [\"for\", \"tripType\"], [\"id\", \"tripType\"], [\"tripType\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"fromLocation\"], [\"for\", \"fromLocation\"], [\"type\", \"text\", \"id\", \"fromLocation\", \"formControlName\", \"fromLocation\"], [\"fromLocation\", \"\"], [1, \"toLocation\"], [\"for\", \"toLocation\"], [\"type\", \"text\", \"id\", \"toLocation\", \"formControlName\", \"toLocation\"], [\"toLocation\", \"\"], [1, \"fromDate\"], [\"for\", \"fromDate\"], [\"type\", \"date\", \"id\", \"fromDate\", \"formControlName\", \"startDate\"], [\"fromDate\", \"\"], [\"for\", \"toDate\"], [\"type\", \"date\", \"id\", \"toDate\", \"formControlName\", \"returnDate\"], [\"returnDate\", \"\"], [\"id\", \"searchButton\", 1, \"column\"], [1, \"searchbtn\", 3, \"disabled\"], [1, \"inbox\"], [3, \"click\"], [\"class\", \"nodataAvailable\", 4, \"ngIf\"], [3, \"formGroup\", \"submit\"], [\"class\", \"listingCard\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"Proceed\", 4, \"ngIf\"], [3, \"value\"], [1, \"nodataAvailable\"], [1, \"listingCard\"], [\"id\", \"airline\", 1, \"flightData\"], [\"id\", \"flightName\", 1, \"flightData\"], [\"id\", \"fromLocation\", 1, \"flightData\"], [\"id\", \"toLocation\", 1, \"flightData\"], [\"id\", \"departureDate\", 1, \"flightData\"], [\"id\", \"departureTime\", 1, \"flightData\"], [\"id\", \"arrivalDate\", 1, \"flightData\"], [\"id\", \"arrivalTime\", 1, \"flightData\"], [\"type\", \"radio\", \"name\", \"journeyId\", 3, \"value\", \"change\"], [\"journeyId\", \"\"], [1, \"Proceed\"]],\n    template: function FlightSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"html\");\n        i0.ɵɵelementStart(1, \"body\");\n        i0.ɵɵelementStart(2, \"section\", 0);\n        i0.ɵɵelement(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function FlightSearchComponent_Template_form_submit_4_listener() {\n          i0.ɵɵrestoreView(_r14);\n\n          const _r0 = i0.ɵɵreference(10);\n\n          const _r2 = i0.ɵɵreference(17);\n\n          const _r3 = i0.ɵɵreference(23);\n\n          const _r4 = i0.ɵɵreference(29);\n\n          const _r5 = i0.ɵɵreference(35);\n\n          return ctx.getFlights(_r0.value, _r2.value, _r3.value, _r4.value, _r5.value);\n        });\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Trip Type \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"select\", 5, 6);\n        i0.ɵɵtemplate(11, FlightSearchComponent_option_11_Template, 2, 2, \"option\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵelementStart(13, \"label\", 9);\n        i0.ɵɵtext(14, \"From location \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelement(16, \"input\", 10, 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 12);\n        i0.ɵɵelementStart(19, \"label\", 13);\n        i0.ɵɵtext(20, \"To Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelement(22, \"input\", 14, 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 16);\n        i0.ɵɵelementStart(25, \"label\", 17);\n        i0.ɵɵtext(26, \"From Date \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵelement(28, \"input\", 18, 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\");\n        i0.ɵɵelementStart(31, \"label\", 20);\n        i0.ɵɵtext(32, \"To Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelement(34, \"input\", 21, 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 23);\n        i0.ɵɵelementStart(37, \"button\", 24);\n        i0.ɵɵtext(38, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"section\", 25);\n        i0.ɵɵelementStart(40, \"button\", 26);\n        i0.ɵɵlistener(\"click\", function FlightSearchComponent_Template_button_click_40_listener() {\n          return ctx.getInbox();\n        });\n        i0.ɵɵtext(41, \" Inbox \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(42, FlightSearchComponent_span_42_Template, 3, 0, \"span\", 27);\n        i0.ɵɵelementStart(43, \"form\", 28);\n        i0.ɵɵlistener(\"submit\", function FlightSearchComponent_Template_form_submit_43_listener() {\n          return ctx.proceedforBooking();\n        });\n        i0.ɵɵtemplate(44, FlightSearchComponent_div_44_Template, 43, 9, \"div\", 29);\n        i0.ɵɵtemplate(45, FlightSearchComponent_button_45_Template, 2, 0, \"button\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.searchForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.trip_Type);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"disabled\", ctx.searchForm.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dataAvailable);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.ListFlightsForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.flightList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.flightList.length != 0);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    styles: [\"body[_ngcontent-%COMP%]{color:#fff;background-color:#dad9e0;margin:0%;overflow-y:auto}.HeaderSearch[_ngcontent-%COMP%]{display:inline-flex;background-color:orange;width:100%}.trip_Type[_ngcontent-%COMP%], .fromLocation[_ngcontent-%COMP%], .toLocation[_ngcontent-%COMP%], .fromDate[_ngcontent-%COMP%], .toDate[_ngcontent-%COMP%], .searchButton[_ngcontent-%COMP%]{width:100%}#logo[_ngcontent-%COMP%]{background-color:#1f1f49;width:10%;height:10%}#searchFields[_ngcontent-%COMP%]{color:#fff;background-color:#1f1f49;width:90%;display:inline-flex}#searchButton[_ngcontent-%COMP%]{background-color:#a70e0e;color:green}button[_ngcontent-%COMP%]{border-radius:40px}.listingCard[_ngcontent-%COMP%]{padding:16px 20px;background:#7b7e80;border-top:8px solid #e5eef5;border-radius:20px;width:80%;display:inline-flex;justify-content:left}.flightData[_ngcontent-%COMP%]{align-content:center;padding:10px;width:8%}span[_ngcontent-%COMP%]{color:#000}.Proceed[_ngcontent-%COMP%]{right:7%;position:fixed}.inbox[_ngcontent-%COMP%]{background-color:#d2691e;height:40px;width:100%}.inbox[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{text-align:center;padding:1%;width:12%;height:96%}.nodataAvailable[_ngcontent-%COMP%]{color:red}\"]\n  });\n  return FlightSearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}