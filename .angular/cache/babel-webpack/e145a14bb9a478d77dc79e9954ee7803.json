{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { adminModel } from './Models/adminModel';\nimport { userModel } from './Models/userModel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./Service/UserService\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_span_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Username can not be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Minimum 4 chars are required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_12_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Maximum 8 chars are required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtemplate(1, LoginComponent_span_12_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, LoginComponent_span_12_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(3, LoginComponent_span_12_span_3_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls[\"username\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls[\"username\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls[\"username\"].errors[\"maxlength\"]);\n  }\n}\n\nfunction LoginComponent_span_19_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please enter email \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_19_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please enter valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtemplate(1, LoginComponent_span_19_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, LoginComponent_span_19_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.loginForm.controls[\"emailId\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.loginForm.controls[\"emailId\"].errors[\"pattern\"]);\n  }\n}\n\nfunction LoginComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtext(1, \"Invalid UserName or Password\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_32_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Username can not be empty\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtemplate(1, LoginComponent_span_32_span_1_Template, 3, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.adminloginForm.controls[\"adminId\"].errors[\"required\"]);\n  }\n}\n\nfunction LoginComponent_span_39_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password can not be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_span_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtemplate(1, LoginComponent_span_39_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.adminloginForm.controls[\"password\"].errors[\"required\"]);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, userDetails) {\n      this.router = router;\n      this.userDetails = userDetails;\n      this.userName = \"\";\n      this.emailId = \"\";\n      this.adminId = \"\";\n      this.password = \"\";\n      this.unAuthorisedError = false; // private router: Router=new Router();\n      // constructor (private router: Router){\n      // }\n\n      this.userId = 0;\n      console.log(\"Hello\");\n      this.loginForm = new FormGroup({\n        username: new FormControl(\"\", [// Validators.pattern(\"\"),\n        Validators.required, Validators.minLength(4), Validators.maxLength(8)]),\n        emailId: new FormControl(\"\", [Validators.required, Validators.pattern(\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")])\n      });\n      this.adminloginForm = new FormGroup({\n        adminId: new FormControl(\"\", [// Validators.pattern(\"\"),\n        Validators.required]),\n        password: new FormControl(\"\", [Validators.required])\n      });\n    }\n\n    ngOnInit() {}\n\n    getLogin(username, emailId) {\n      this.userName = username;\n      this.emailId = emailId;\n      let user = new userModel(0, this.userName, this.emailId);\n      console.log(user);\n      this.userDetails.addUser(user).subscribe({\n        next: res => {\n          console.log(\"inside ajax call\");\n          console.log(res);\n          this.userModelop = res;\n\n          if (this.userModelop != null) {\n            this.router.navigate([\"FlightSearch\", this.userModelop.userId]);\n          }\n        }\n      });\n      console.log(\"after ajax call\");\n    }\n\n    getAdminLogin(adminId, password) {\n      this.adminId = adminId;\n      this.password = password;\n      let admin = new adminModel(adminId, password);\n      console.log(JSON.stringify(admin));\n      this.userDetails.adminLogin(admin).subscribe({\n        next: res => {\n          console.log(res['token']);\n          this.router.navigate([\"admin\", \"\"]);\n          localStorage.setItem(\"token\", res['token']);\n        },\n        error: err => {\n          console.log(\"unauthorised\");\n          this.unAuthorisedError = true;\n          console.log(err);\n        }\n      });\n      console.log(adminId);\n      console.log(password);\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 44,\n    vars: 9,\n    consts: [[\"id\", \"loginUser\", 1, \"login\", 3, \"formGroup\", \"submit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\"], [\"username\", \"\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"emailId\"], [\"type\", \"text\", \"id\", \"emailId\", \"formControlName\", \"emailId\"], [\"emailId\", \"\"], [3, \"disabled\"], [\"id\", \"loginAdmin\", 1, \"login\", 3, \"formGroup\", \"submit\"], [\"class\", \"unAuthorisedError\", 4, \"ngIf\"], [\"for\", \"adminId\"], [\"type\", \"text\", \"id\", \"adminId\", \"formControlName\", \"adminId\"], [\"adminId\", \"\"], [\"for\", \"password\"], [\"type\", \"text\", \"id\", \"password\", \"formControlName\", \"password\"], [\"password\", \"\"], [1, \"vertical\"], [1, \"error\"], [4, \"ngIf\"], [1, \"unAuthorisedError\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r16 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"html\");\n        i0.ɵɵelementStart(1, \"body\");\n        i0.ɵɵelementStart(2, \"H1\");\n        i0.ɵɵtext(3, \"Flight Booking\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_4_listener() {\n          i0.ɵɵrestoreView(_r16);\n\n          const _r0 = i0.ɵɵreference(11);\n\n          const _r2 = i0.ɵɵreference(18);\n\n          return ctx.getLogin(_r0.value, _r2.value);\n        });\n        i0.ɵɵelementStart(5, \"h2\");\n        i0.ɵɵtext(6, \"User \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"label\", 1);\n        i0.ɵɵtext(8, \" Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelement(10, \"input\", 2, 3);\n        i0.ɵɵtemplate(12, LoginComponent_span_12_Template, 4, 3, \"span\", 4);\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"label\", 5);\n        i0.ɵɵtext(15, \" E-MailId\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelement(17, \"input\", 6, 7);\n        i0.ɵɵtemplate(19, LoginComponent_span_19_Template, 3, 2, \"span\", 4);\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementStart(21, \"button\", 8);\n        i0.ɵɵtext(22, \"Register/Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"form\", 9);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_23_listener() {\n          i0.ɵɵrestoreView(_r16);\n\n          const _r5 = i0.ɵɵreference(31);\n\n          const _r7 = i0.ɵɵreference(38);\n\n          return ctx.getAdminLogin(_r5.value, _r7.value);\n        });\n        i0.ɵɵelementStart(24, \"h2\");\n        i0.ɵɵtext(25, \"Admin \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, LoginComponent_span_26_Template, 3, 0, \"span\", 10);\n        i0.ɵɵelementStart(27, \"label\", 11);\n        i0.ɵɵtext(28, \" Admin Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"br\");\n        i0.ɵɵelement(30, \"input\", 12, 13);\n        i0.ɵɵtemplate(32, LoginComponent_span_32_Template, 2, 1, \"span\", 4);\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelementStart(34, \"label\", 14);\n        i0.ɵɵtext(35, \" Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"br\");\n        i0.ɵɵelement(37, \"input\", 15, 16);\n        i0.ɵɵtemplate(39, LoginComponent_span_39_Template, 2, 1, \"span\", 4);\n        i0.ɵɵelement(40, \"br\");\n        i0.ɵɵelementStart(41, \"button\", 8);\n        i0.ɵɵtext(42, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"username\"].dirty && !!ctx.loginForm.controls[\"username\"].errors);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.controls[\"emailId\"].dirty && !!ctx.loginForm.controls[\"emailId\"].errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.adminloginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.unAuthorisedError);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.adminloginForm.controls[\"adminId\"].dirty && !!ctx.adminloginForm.controls[\"adminId\"].errors);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.adminloginForm.controls[\"password\"].dirty && !!ctx.adminloginForm.controls[\"password\"].errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.adminloginForm.invalid);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgIf],\n    styles: [\"body[_ngcontent-%COMP%]{color:#fff;position:fixed;height:100%;width:100%;background-color:#4e8292;margin:0%}#loginUser[_ngcontent-%COMP%]{position:fixed;bottom:50%;left:10%;width:300px;text-align:center}#loginAdmin[_ngcontent-%COMP%]{position:fixed;bottom:50%;right:10%;width:300px;text-align:center}.vertical[_ngcontent-%COMP%]{border-left:2px solid black;height:200px;position:absolute;left:50%;top:20%}h1[_ngcontent-%COMP%]{color:#f0dee3}.error[_ngcontent-%COMP%]{color:red;position:relative}.unAuthorisedError[_ngcontent-%COMP%]{color:red}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}